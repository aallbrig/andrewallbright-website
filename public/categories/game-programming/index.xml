<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Game Programming on Andrew Allbright</title>
    <link>https://andrewallbright.com/categories/game-programming/</link>
    <description>Recent content in Game Programming on Andrew Allbright</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 May 2024 11:39:13 +0000</lastBuildDate>
    <atom:link href="https://andrewallbright.com/categories/game-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Techniques to Mitigate GameLift Anywhere’s Odd Delays</title>
      <link>https://andrewallbright.com/techniques-to-mitigate-gamelift-anywheres-odd-delays/</link>
      <pubDate>Tue, 28 May 2024 11:39:13 +0000</pubDate>
      <guid>https://andrewallbright.com/techniques-to-mitigate-gamelift-anywheres-odd-delays/</guid>
      <description>&lt;p&gt;AWS GameLift is a cool product allowing game developers (hobbyist or professional) to develop multiplayer projects. You provide the game server executable and GameLift will take care of hosting the server processes, to your specifications. They even have a collection of features called “GameLift Anywhere” that supports a local development. Say you want to test some netcode you’ve written for your game, you’re using Unity, and you’ve already installed the GameLift unity plugin. Great! You can start your game server in your locally running Unity Editor and GameLift can know about the server there.&lt;/p&gt;</description>
    </item>
    <item>
      <title>“Touch” as a guiding principle for Video Games</title>
      <link>https://andrewallbright.com/touch-as-a-guiding-principle-for-video-games/</link>
      <pubDate>Sat, 09 Mar 2024 14:46:54 +0000</pubDate>
      <guid>https://andrewallbright.com/touch-as-a-guiding-principle-for-video-games/</guid>
      <description>&lt;p&gt;Good writing mostly follows the adage “show don’t tell” to help writers prioritize how they are conveying information. Perhaps video games should follow a “touch, don’t show” guiding light to help game developers convey experiences meaningful to the interactive medium.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Robot Talk: The Future of Programming?</title>
      <link>https://andrewallbright.com/robot-talk-the-future-of-programming/</link>
      <pubDate>Thu, 04 Jan 2024 18:50:31 +0000</pubDate>
      <guid>https://andrewallbright.com/robot-talk-the-future-of-programming/</guid>
      <description>&lt;p&gt;Large language models have hit the scene and they represent a large disruption to how work is traditionally done. Programming is no exception.&lt;/p&gt;&#xA;&lt;p&gt;I’ve been using LLMs like chatGPT and copilot for almost a year now. I saw potential of using the tool for my own creator activities. I have some thoughts on how AI may change the profession of programming.&lt;/p&gt;&#xA;&lt;p&gt;As a quick aside I summarize my LLM usage in two broad categories: strategic versus tactical. Strategic questions represent research and design; chatGPT is excellent at serving this role. Tactical questions represent how to create or manipulate software to do what I want to do; both chatGPT and copilot fulfill this. I believe I am the entity that wants and the LLM tooling dutifully helps me get what I want.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hypothetical Course on Automated Testing for Video Games</title>
      <link>https://andrewallbright.com/hypothetical-course-on-automated-testing-for-video-games/</link>
      <pubDate>Mon, 13 Nov 2023 13:00:15 +0000</pubDate>
      <guid>https://andrewallbright.com/hypothetical-course-on-automated-testing-for-video-games/</guid>
      <description>&lt;p&gt;I’ve thought about what sort of information I’d want to see if I were watching an educational course on the topic of “automated testing for video games.” Here are my thoughts.&lt;/p&gt;&#xA;&lt;p&gt;I would assume a course would start out with the basics. Basics like &lt;em&gt;here is a test&lt;/em&gt;, &lt;em&gt;here is how to come up with a assertion of software behavior&lt;/em&gt;, and &lt;em&gt;here is how to prioritize what automated tests to write&lt;/em&gt;. I would also presume the basics would simply new up ethereal game engine game objects and attach relevant game engine components to them (such as Unity’s MonoBehaviour components).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restoring My Website using IaC</title>
      <link>https://andrewallbright.com/transforming-my-website-from-ad-box-manual-operations-into-iac-using-terraform-and-cloudformation/</link>
      <pubDate>Mon, 06 Nov 2023 13:00:00 +0000</pubDate>
      <guid>https://andrewallbright.com/transforming-my-website-from-ad-box-manual-operations-into-iac-using-terraform-and-cloudformation/</guid>
      <description>&lt;p&gt;This very website faces a prolonged period of inactivity. I must admit that there appeared an error that I wasn’t able to resolve. Allow me to describe my previous setup so that you can understand the transformation.&lt;/p&gt;&#xA;&lt;p&gt;I once had a desire to create a website for myself. I wanted to create a space on the internet to call my own. Previously I had created WordPress websites for others; surely I could create one for myself.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Thoughts on “Generative A.I.” LLMs</title>
      <link>https://andrewallbright.com/thoughts-on-generative-a-i-llms/</link>
      <pubDate>Fri, 03 Nov 2023 23:29:19 +0000</pubDate>
      <guid>https://andrewallbright.com/thoughts-on-generative-a-i-llms/</guid>
      <description>&lt;p&gt;After a long hiatus I am finally back. There is a story I can’t wait to tell. For now, lets talk about large language models (LLMs)&lt;/p&gt;&#xA;&lt;p&gt;I have given some thought to LLMs specifically on the source of data LLMs consume. For some context I heavily use chatGPT and GitHub copilot during my hobbyist development. I am impressed. I’ve thought about how these LLMs are trained. They are given access to content created largely through text, such as open source program source code available to anyone. I wondered what sort of impact LLMs tooling may have on the type of writing people do.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Cloud Quest: the killer app VGIs have been waiting for?</title>
      <link>https://andrewallbright.com/aws-cloud-quest-the-killer-app-vgis-have-been-waiting-for/</link>
      <pubDate>Wed, 16 Mar 2022 14:01:51 +0000</pubDate>
      <guid>https://andrewallbright.com/aws-cloud-quest-the-killer-app-vgis-have-been-waiting-for/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;learn AWS by playing a video game&lt;/strong&gt;&lt;/em&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;I can hardly type this because I am shaking with excitement. AWS has released this video game to teach AWS skills. This is days after I wrote my &lt;em&gt;Defining VGIs&lt;/em&gt; article. I am still processing this information and so far I love what I see.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Defining Video Game Interfaces (VGIs)</title>
      <link>https://andrewallbright.com/defining-video-game-interfaces-vgis/</link>
      <pubDate>Mon, 14 Mar 2022 03:22:14 +0000</pubDate>
      <guid>https://andrewallbright.com/defining-video-game-interfaces-vgis/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;Most everyone today interact with &lt;em&gt;&lt;!-- raw HTML omitted --&gt;graphical user interfaces&lt;!-- raw HTML omitted --&gt;&lt;/em&gt; (a.k.a GUIs) when using a computer (phone or otherwise). This makes sense as people are visual creatures and it helps them use computers effectively.&lt;/p&gt;&#xA;&lt;p&gt;Technical people like programmers or computer power users may choose to use &lt;em&gt;&lt;!-- raw HTML omitted --&gt;command line interfac&lt;!-- raw HTML omitted --&gt;&lt;/em&gt; (CLIs). You can accomplish so much when you get used to using CLIs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Brand New Unity Project: My Starter Kit</title>
      <link>https://andrewallbright.com/brand-new-unity-project-my-starter-kit/</link>
      <pubDate>Sun, 20 Feb 2022 14:00:00 +0000</pubDate>
      <guid>https://andrewallbright.com/brand-new-unity-project-my-starter-kit/</guid>
      <description>&lt;p&gt;Testing is a core tenant I believe helps me produce high quality software. In order to have faith in a test suite that is assembled is to constantly verify every code change that is introduced to the system.&lt;/p&gt;&#xA;&lt;p&gt;Github Actions (&lt;!-- raw HTML omitted --&gt;docs&lt;!-- raw HTML omitted --&gt;) is a wonderful workflow based system that can easily integrate with a Github project. Since Github is my version control repository of choice, it is natural for me to adopt it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing Tests for Video Games: A Philosophy (2022)</title>
      <link>https://andrewallbright.com/writing-tests-for-video-games-a-philosophy-2022/</link>
      <pubDate>Sat, 19 Feb 2022 16:30:40 +0000</pubDate>
      <guid>https://andrewallbright.com/writing-tests-for-video-games-a-philosophy-2022/</guid>
      <description>&lt;p&gt;I mean to capture my current early 2022 thoughts on writing tests intended to be run by &lt;!-- raw HTML omitted --&gt;automated processes&lt;!-- raw HTML omitted --&gt; created for Unity based video games. I want to capture my thoughts so I can share this and receive feedback. I &lt;em&gt;know&lt;/em&gt; I haven’t found a holistic philosophy around testing. I &lt;em&gt;know&lt;/em&gt; I can be better. If you can help, please do!&lt;/p&gt;&#xA;&lt;h3 id=&#34;pit-stop-where-is-all-the-content.wp-block-heading&#34;&gt;Pit stop: Where is all the content?&lt;/h3&gt;&#xA;&lt;p&gt;I love researching topics, buying books, and seeing what content “influencers” say on topics. When I investigate this topic I find very little content. Are content creators disinterested in this topic? The ones that do create content seem to be stuck showing testing setup and trivial examples, such as testing a function that adds two numbers. I’m sure there is a deep dive out there but I can’t seem to find it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why the Web is the Ultimate Target Platform for Games</title>
      <link>https://andrewallbright.com/why-the-web-is-the-ultimate-target-platform-for-games/</link>
      <pubDate>Fri, 18 Feb 2022 15:10:55 +0000</pubDate>
      <guid>https://andrewallbright.com/why-the-web-is-the-ultimate-target-platform-for-games/</guid>
      <description>&lt;h2 id=&#34;preamble.wp-block-heading&#34;&gt;Preamble&lt;/h2&gt;&#xA;&lt;p&gt;Over a year ago I was looking for a game engine to invest my time into. Before this I had relegated myself to making 2D games using python + pygame, javascript + phaser, and actionscript + flash. However; I wanted to upgrade from using game libraries into using a full on game engine. I want to know how to make 3D games as well!&lt;/p&gt;&#xA;&lt;p&gt;I evaluated three engines: Unity, Unreal, and Godot. All three game engines offer similar features and at the time Unity was the only game engine that offered support for building something capable of running inside the browser. Being able to share my game over through the browser has always been a primary criteria for me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Global Game Jam 2022: Retro</title>
      <link>https://andrewallbright.com/global-game-jam-2022-retro/</link>
      <pubDate>Tue, 08 Feb 2022 18:15:53 +0000</pubDate>
      <guid>https://andrewallbright.com/global-game-jam-2022-retro/</guid>
      <description>&lt;p&gt;I attended Global Game Jam 2022. If you don’t know what a game jam is, the programmer in me will say “it is a hackathon but your product is a video game.” How did I do? As a learning experience I am proud of what I was able to accomplish. However; I think there is an opportunity to reflect on why I didn’t end up with a finished product. This article is my retelling of this year’s Global Game Jam.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MechPilot: my TimePilot prototype project idea</title>
      <link>https://andrewallbright.com/mechpilot-my-timepilot-prototype-project-idea/</link>
      <pubDate>Sat, 13 Nov 2021 19:22:58 +0000</pubDate>
      <guid>https://andrewallbright.com/mechpilot-my-timepilot-prototype-project-idea/</guid>
      <description>&lt;h2 class=&#34;wp-block-heading&#34; id=&#34;the-inspiration&#34;&gt;The Inspiration&lt;/h2&gt;&#xA;&lt;p&gt;I’m going to go to my local video game arcade bar to work on more Unity programming (aka “game” programming, although I feel silly saying that). At that bar is an arcade cabinet called Time Pilot. I had skipped over that cabinet quite a few times before I finally started playing it. The game is fun! It is relatively complex yet relatively simple. A gem from the 1980s!&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Printable Project Notes Technique</title>
      <link>https://andrewallbright.com/printable-project-notes-technique/</link>
      <pubDate>Thu, 09 Sep 2021 03:08:57 +0000</pubDate>
      <guid>https://andrewallbright.com/printable-project-notes-technique/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;I have discovered a technique that seems to help with project work. It is a combination of digital and physical. I call the technique the “Printable Project Notes technique.” Let me tell you how it works.&lt;/p&gt;&#xA;&lt;p&gt;The generic objective is to use your printer to create something that can help direct your project. The idea is that your screen real estate while doing project work is extremely valuable; wouldn’t it be nice to have something physical to reference?&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Efficiently Play Through Games</title>
      <link>https://andrewallbright.com/how-to-efficiently-play-through-games/</link>
      <pubDate>Sat, 03 Apr 2021 20:57:07 +0000</pubDate>
      <guid>https://andrewallbright.com/how-to-efficiently-play-through-games/</guid>
      <description>&lt;p&gt;If you want to experience a game but don’t have much time you may consider this advice. This recipe can be used to quickly play through a game.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;First, find a speed run video of someone quickly beating your game.&lt;/p&gt;&#xA;&lt;p&gt;Next, load up the game you want to play.&lt;/p&gt;&#xA;&lt;p&gt;Watch the video showing how they beat a level of the game. Stop the video once it is clear they are at the end of the level.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualized Simulations as Communication Media</title>
      <link>https://andrewallbright.com/visualized-simulations-as-communication-media/</link>
      <pubDate>Thu, 25 Mar 2021 16:25:14 +0000</pubDate>
      <guid>https://andrewallbright.com/visualized-simulations-as-communication-media/</guid>
      <description>&lt;p&gt;Is it possible to get &lt;em&gt;so good&lt;/em&gt; at video game creation software that you can &lt;em&gt;quickly&lt;/em&gt; create shareable media to communicate complex ideas to other people? What form does the shareable media take?&lt;/p&gt;&#xA;&lt;p&gt;Part of the excitement of video games is being able to see and interact with things I never would have imagined. It is absolutely surreal to have seen what I’ve seen. Video games are a triumph of human storytelling. This storytelling skill can be used in much broader contexts than they are today.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Thoughts on Unity Testing</title>
      <link>https://andrewallbright.com/thoughts-on-unity-testing/</link>
      <pubDate>Fri, 19 Mar 2021 16:11:23 +0000</pubDate>
      <guid>https://andrewallbright.com/thoughts-on-unity-testing/</guid>
      <description>&lt;p&gt;Writing tests for software is important for multiple reasons. For me, testing increases velocity by removing the need for manual verification of a feature or bug fix. For me, testing takes on a form of documentation for my software. For me, testing lets me return to a project and get a little hit of dopamine as I see a set of passing tests.&lt;/p&gt;&#xA;&lt;p&gt;Unity is a fantastic piece of software with an equally fantastic amount of warts. Those warts extend to testing. In my opinion, the developers of Unity consider testing a second class activity. In my opinion, the developers of Unity do not think their end users find value in testing. I believe the developers of Unity do not have their most highly talented engineers working on the testing story for Unity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Global Game Jam 2021</title>
      <link>https://andrewallbright.com/global-game-jam-2021/</link>
      <pubDate>Sat, 06 Feb 2021 14:02:36 +0000</pubDate>
      <guid>https://andrewallbright.com/global-game-jam-2021/</guid>
      <description>&lt;p&gt;Last weekend, the weekend of January 30th, I participated in &lt;!-- raw HTML omitted --&gt;Global Game Jam 2021&lt;!-- raw HTML omitted --&gt;. I had not planned on participating because I was unaware of the details of the event. Having gone through the &lt;!-- raw HTML omitted --&gt;Unity Essentials Pathway&lt;!-- raw HTML omitted --&gt; I am aware of a few game jams and am aware that the global game jam is the largest of the bunch.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Game Programming</title>
      <link>https://andrewallbright.com/game-programming/</link>
      <pubDate>Thu, 28 Jan 2021 15:00:18 +0000</pubDate>
      <guid>https://andrewallbright.com/game-programming/</guid>
      <description>&lt;p&gt;Since late December I have been learning video game development in earnest as a hobby. It is fun to consider the challenges of video games as software projects. This consideration lets me think about the end to end software lifecycle of video games.&lt;/p&gt;&#xA;&lt;p&gt;I enjoy playing video games as a hobby. As a kid I loved real time strategy (RTS) games and role playing games, often the ones created in Japan (JRPG). I enjoy the idea of being a creator of game worlds, at least as a hobby.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
